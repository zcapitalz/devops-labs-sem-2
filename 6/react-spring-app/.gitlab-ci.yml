include:
  - project: 'root/ci-modules'
    ref: master
    file: 'templates/docker-build.yml'

variables:
  CI_REGISTRY_IMAGE_BASE_NAME: '${CI_REGISTRY}/${CI_REGISTRY_USER}/react-spring-app'
  IMAGE_TAG: 'latest'

stages:
  - build
  - deploy

build_frontend:
  extends: .build-docker-image
  variables:
    DOCKERFILE_PATH: "react-frontend/Dockerfile"
    CONTEXT: "react-frontend/"
    IMAGE_NAME: "${CI_REGISTRY_IMAGE_BASE_NAME}-frontend"
  rules:
    - changes:
      - "react-frontend/**/*"

build_backend:
  extends: .build-docker-image
  variables:
    DOCKERFILE_PATH: "spring-backend/Dockerfile"
    CONTEXT: "spring-backend/"
    IMAGE_NAME: "${CI_REGISTRY_IMAGE_BASE_NAME}-backend"
  rules:
    - changes:
      - "spring-backend/**/*"

deploy_app:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  variables:
    SERVER_PORT: "8080"
    NGINX_PORT: "3000"
    NGINX_CONFIG_PATH: "${CI_PROJECT_DIR}/nginx.conf"
    DB_HOST: "db"
    DB_PORT: "3306"
    DB_NAME: "hobbie"
    DB_USER: "user"
    DB_PASSWORD: "password"
    DB_ROOT_PASSWORD: "rootpassword"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - export NGINX_CONFIG=$(cat $NGINX_CONFIG_PATH)
    - echo $NGINX_CONFIG
  script:
    - docker-compose down --remove-orphans || true
    - docker-compose up -d --no-start nginx-proxy
    - mkdir -p /etc/nginx/conf.d
    - echo $NGINX_CONFIG > /etc/nginx/conf.d/default.conf
    - docker cp /etc/nginx/conf.d/default.conf hobbie-nginx-proxy:/etc/nginx/conf.d/default.conf
    - docker-compose up -d
  needs:
    - job: build_frontend
      artifacts: false
      optional: true
    - job: build_backend
      artifacts: false
      optional: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_JOB_STATUS == "success"'